@using LVMini.ViewModels
@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;
@model IEnumerable<TeamViewModel>
@{
    ViewData["Title"] = "Team";
}
<head>
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="http://cdn.kendostatic.com/2013.2.716/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2013.2.716/styles/kendo.default.min.css" rel="stylesheet" />
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script src="http://cdn.kendostatic.com/2013.2.716/js/kendo.all.min.js"></script>
<!--Kendo Style Refernces-->
<!--Styles. First Common Then Theme-->
<link rel="stylesheet" href="../wwwroot/css/kendo.common.min.css">
<link rel="stylesheet" href="../wwwroot/css/kendo.silver.min.css">
<script type="text/javascript" src="//use.typekit.net/npe3lft.js"></script>
<script type="text/javascript">try { Typekit.load(); } catch (e) { }</script>
<script type="text/javascript" src="js/site.js"></script>
<!--Scripts  JQuery First Then Kendo Script-->
<script src="js/jquery.min.js"></script>
<script src="js/kendo.web.min.js"></script>
</head>

<h2>Teams</h2>
<div class ="row">
    <div class="form-horizontal well">
        @*@(Html.Kendo().TreeList<Kendo.Mvc.Examples.Models.TreeList.EmployeeDirectoryModel>()
            .Name("treelist")
            .Toolbar(toolbar => toolbar.Create())
            .Columns(columns =>
            {
                columns.Add().Field(e => e.FirstName).Width(220).Title("First Name");
                columns.Add().Field(e => e.LastName).Width(100).Title("Last Name");
                columns.Add().Field(e => e.Position);
                columns.Add().Field(e => e.HireDate).Format("{0:MMMM d, yyyy}");
                columns.Add().Field(e => e.Phone).Width(200);
                columns.Add().Field(e => e.Extension).Width(140).Title("Ext").Format("{0:#}");
                columns.Add().Width(200).Command(c =>
                {
                    c.Edit();
                    c.Destroy();
                });
            })
            .Editable(e => e.Mode("popup"))
            .DataSource(dataSource => dataSource
                .Create(create => create.Action("Create", "EmployeeDirectory"))
                .Read(read => read.Action("All", "EmployeeDirectory"))
                .Update(update => update.Action("Update", "EmployeeDirectory"))
                .Destroy(delete => delete.Action("Destroy", "EmployeeDirectory"))
                .Model(m => {
                    m.Id(f => f.EmployeeId);
                    m.ParentId(f => f.ReportsTo);
                    m.Expanded(true);
                    m.Field(f => f.FirstName);
                    m.Field(f => f.LastName);
                    m.Field(f => f.ReportsTo);
                    m.Field(f => f.HireDate);
                    m.Field(f => f.BirthDate);
                    m.Field(f => f.Extension).DefaultValue(0);
                    m.Field(f => f.Position);
                })
            )
            .Height(540)
        )*@
    </div>
</div>
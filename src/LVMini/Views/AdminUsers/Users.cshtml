@using LVMini.ViewModels
@model IEnumerable<ModifiedUserModel>
@{
    ViewData["Title"] = "Users";
}

<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />

</head>

<h3 style="color:black"><i class="glyphicon glyphicon-globe"></i>&nbsp;Users List</h3>
<hr />
<div class="form-horizontal well">
    <div class="row">
        <section class="content">
            <div class="col-md-8 col-md-offset-2">
                <div class="panel-body">
                    <div class="user-container">
                        <div id="grid">

                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<script id="mytemplate" type="text/x-kendo-template">

    <div id="container">
        First Name: <input type="text" data-bind="value:FirstName" /><br />
        Last Name: <input type="text" data-bind="value:LastName" /><br />
        Email: <input type="text" data-bind="value:Email" /><br />
        <button data-bind="click: myClickEvent">click me</button>
    </div>

</script>

<script>



    var dataSource = new kendo.data.DataSource({
        transport: {
            read: {
                url: "http://localhost:49649/AdminUsers/UsersAsync/",
                dataType: "json"

            },
        //    update: {
        //        type: 'POST',
        //        url: 'http://localhost:49649/admin/ModifyUserInfo/'

        //    },
        //    destroy: {
        //        url: "http://localhost:49649/admin/UsersAsync"

        //    },
        //    create: {
        //        url: "http://localhost:49649/admin/UsersAsync"

        //    },
        //    parameterMap: function (options, operation) {
        //        if (operation !== "read" && options.models) {
        //            return { models: kendo.stringify(options.models) };
        //        }
        //    }
        //},
        batch: true,
        pageSize: 5,
        error: function (e, jqxhr) {
            console.log(e, jqxhr);
        },
        schema: {
            model: {
                id: "userName",
                fields: {
                    username: { editable: false },
                    firstName: { validation: { required: true } },
                    lastName: { validation: { required: true } },
                    email: { editable: false }
                }
            },
            data: function (response) { return response; }
        }
    }});
    var grid = $("#grid").kendoGrid({
        dataSource: dataSource,
        groupable: true,
        sortable: true,
        resizable: true,
        reorderable: true,
        columnMenu: true,
        filterable: true,
        editable: "popup",
        pageable: {
            pageSizes: true,
            buttonCount: 3
        },
        //toolbar: ["Active", "Unactive", "All"],
        columns: [
            {
                template: "<div class='customer-photo'" +
                    "style='background-image: url(../wwwroot/images/#:data.Vsg_Logo200x200#.jpg);'></div>",
                width: 50
            },
            {
                field: "username",
                editor: function(el) {
                    el.text(options.model.username);
                },
                title: "Username"
            },
            {
                field: "firstName",
                title: "First Name"
            },
            {
                field: "lastName",
                title: "Last Name"
            },
            {
                field: "email",
                title: "E-Mail",

            },
            {
                command: { text: "Edit", click:  function(e) {
                        e.preventDefault();

                        var selectedItem = this.dataSource.getByUid($(e.currentTarget).parents("tr").data("uid"));

                        var wnd = $("<div />").kendoWindow({

                            model: true,
                            visible: false,
                            width: 800,
                            height: 400
                        }).data("kendoWindow");

                        wnd.content($("#mytemplate").html());


                        kendo.bind($("#container"), { item: selectedItem });

                        wnd.center().open();

                    }
                },
                title: "&nbsp;",
                editor: editor,
                width: "180px"
            }
        ]
    }).data("kendoGrid");

    function customEditor(container, options) {
        var guid = kendo.guid();
        $('<input class="k-checkbox" id="userName"' + guid + '" type="checkbox" name="Discontinued" data-type="boolean" data-bind="checked:Discontinued">').appendTo(container);
        $('<label class="k-checkbox-label" for="' + guid + '">&#8203;</label>').appendTo(container);
    }

    var editor = e => {
        e.preventDefault();

        var wnd = $("<div />").kendoWindow({
            model: true,
            visible: false,
            width: 800,
            height: 400
        }).data("kendoWindow");

        wnd.center().open();
    }

</script>

<style type="text/css">
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>

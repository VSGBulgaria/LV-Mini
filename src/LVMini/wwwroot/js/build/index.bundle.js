/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "http://localhost:8080/build/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _site = __webpack_require__(/*! ./site */ \"./site.js\");\n\nvar _site2 = _interopRequireDefault(_site);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction some() {\n    console.log(\"debugger\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbmRleC5qcz80MWY1Il0sIm5hbWVzIjpbInNvbWUiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFFQSxTQUFTQSxJQUFULEdBQWdCO0FBQ1pDLFlBQVFDLEdBQVIsQ0FBWSxVQUFaO0FBQ0giLCJmaWxlIjoiLi9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXNwb25kIGZyb20gXCIuL3NpdGVcIjtcclxuXHJcbmZ1bmN0aW9uIHNvbWUoKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcImRlYnVnZ2VyXCIpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./index.js\n");

/***/ }),

/***/ "./site.js":
/*!*****************!*\
  !*** ./site.js ***!
  \*****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Write your JavaScript code.\n\n// For Map Location\nfunction initMap() {\n    var location = { lat: 42.142517, lng: 24.720753 };\n    var map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 15,\n        center: location\n    });\n    var marker = new google.maps.Marker({\n        position: location,\n        map: map\n    });\n}\n\nfunction logErrorInConsole(err) {\n    console.log('Error: ' + err);\n}\n\nfunction displayUsernameSign(isAvailable) {\n    console.log(isAvailable);\n    var available_sign = $('#username_available_sign');\n    var unavailable_sign = $('#username_unavailable_sign');\n    if (!isAvailable) {\n        $(available_sign).css('display', 'inline-block');\n        $(available_sign).css('color', 'green');\n        $(unavailable_sign).css('display', 'none');\n    } else {\n        $(available_sign).css('display', 'none');\n        $(unavailable_sign).css('color', 'red');\n        $(unavailable_sign).css('display', 'inline-block');\n    }\n}\n\n$('.modify-users-buttons').on('click', saveProfileChanges);\n\n//Admin Edit Profile\nfunction saveProfileChanges(ev) {\n    var currentTargetId = ev.currentTarget.id;\n    var currentUser = currentTargetId.replace(new RegExp('^btnModify'), '');\n    var allLabels = $('.form-control');\n    var labelsNeedForExtractingVhanges = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = allLabels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var label = _step.value;\n\n            if (typeof label.id !== 'undefined' && label.id.endsWith(currentUser)) {\n                labelsNeedForExtractingVhanges.push(label);\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var labelRegex = new RegExp('([\\w]+)(TestUN12)');\n    var properiesOfTheUserModel = [];\n    var labelsSubfix = 'Input' + currentUser;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = labelsNeedForExtractingVhanges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _label = _step2.value;\n\n            properiesOfTheUserModel.push(_label.id.replace(labelsSubfix, ''));\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    var user = {};\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n        for (var _iterator3 = properiesOfTheUserModel[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var property = _step3.value;\n\n            if (property === 'IsActive') {\n                user[property] = $('#' + property + 'Input' + currentUser).val().toLowerCase() == 'true';\n            } else {\n                user[property] = $('#' + property + 'Input' + currentUser).val();\n            }\n        }\n    } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n            }\n        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n        }\n    }\n\n    user['Username'] = currentUser;\n    $.ajax({\n        type: 'POST',\n        url: '/Admin/ModifyUserInfo',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify(user),\n        success: replaceTheExistingData,\n        error: logErrorInConsole\n    });\n    function replaceTheExistingData(isDataReplaced) {\n        if (isDataReplaced) {\n            //TODO: refactor the replacing \n            var oldFirstNameLabelId = 'currentUserFirstName' + currentUser;\n            var oldLastNameLabelId = 'currentUserLastName' + currentUser;\n            $('#' + oldFirstNameLabelId).text(changedFirstName);\n            $('#' + oldLastNameLabelId).text(changedLastName);\n            $('#hidden' + currentUser).css('display', 'none');\n        }\n    }\n}\n\nfunction isEmpty(str) {\n    return !str || 0 === str.length;\n}\n\n//My Profile \n$('#saveMyProfileChangesButton').on('click', function () {\n    var currentUserChangedValues = $('.form-control');\n    var usersChangedValues = {\n        Email: undefined,\n        FirstName: undefined,\n        LastName: undefined\n    };\n    var emailId = 'email';\n    var firstNameId = 'FirstName';\n    var lastNameId = 'LastName';\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n        for (var _iterator4 = currentUserChangedValues[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var userInput = _step4.value;\n\n            if (userInput.id.toUpperCase() === emailId.toUpperCase()) {\n                usersChangedValues.Email = $(userInput).val();\n            }if (userInput.id.toUpperCase() === firstNameId.toUpperCase()) {\n                usersChangedValues.FirstName = $(userInput).val();\n            }if (userInput.id.toUpperCase() === lastNameId.toUpperCase()) {\n                usersChangedValues.LastName = $(userInput).val();\n            }\n        }\n    } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n            }\n        } finally {\n            if (_didIteratorError4) {\n                throw _iteratorError4;\n            }\n        }\n    }\n\n    checkIsDataCorrect(usersChangedValues);\n    if (checkIsDataCorrect(usersChangedValues)) {\n        sendChanges(usersChangedValues);\n    }\n    hideMyprofileChangesForm();\n\n    function sendChanges(data) {\n        $.ajax({\n            type: 'POST',\n            url: '/Accounts/ModifyMyProfileInfo',\n            dataType: 'json',\n            contentType: 'application/json',\n            data: JSON.stringify(data),\n            success: replaceChangedValues,\n            error: logErrorInConsole\n        });\n    }\n\n    function checkIsDataCorrect(myProfileData) {\n        var expr = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        var emailResult = expr.test(myProfileData['Email']);\n        var firstNameResult = !isEmpty(myProfileData['FirstName']);\n        var lastNameResult = !isEmpty(myProfileData['LastName']);\n        return emailResult && firstNameResult && lastNameResult;\n    }\n\n    function replaceChangedValues(changesApplied) {\n        if (changesApplied) {\n            var oldDataFields = $('.control-label');\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = oldDataFields[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var dataField = _step5.value;\n\n                    if ($(dataField).attr('class') === 'control-label') {\n                        for (var prop in usersChangedValues) {\n                            if ($(dataField).attr('for').toUpperCase() === prop.toUpperCase()) {\n                                $(dataField).html(usersChangedValues[prop]);\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n        }\n    }\n});\n\n$('#Cancel').on('click', hideMyprofileChangesForm);\n\nfunction hideMyprofileChangesForm() {\n    if (!$('#editMyProfile').hasClass('hidden')) {\n        $('#editMyProfile').addClass('hidden');\n    }\n}\n\n//MyProfile Edit Finctions\n$('#btnEdit').click(function () {\n    if ($('#editMyProfile').hasClass('hidden')) $('#editMyProfile').removeClass('hidden');\n});\n\n//Get Users Edit\n$('.btnUEdit').click(function (ev) {\n    var userIdetity = ev.currentTarget.id;\n    var userIdentityAsJqueryString = '#hidden' + userIdetity;\n    var hiddenUserTemplate = $(userIdentityAsJqueryString);\n    $(hiddenUserTemplate).attr('class', 'col-lg-6');\n    $(hiddenUserTemplate).css('display', 'inline-block');\n});\n\n/** Used Only For Touch Devices **/\n//(function (window) {\n\n//    // for touch devices: add class cs-hover to the figures when touching the items\n//    if (Modernizr.touch) {\n\n//        // classie.js https://github.com/desandro/classie/blob/master/classie.js\n//        // class helper functions from bonzo https://github.com/ded/bonzo\n\n//        function classReg(className) {\n//            return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\n//        }\n\n//        // classList support for class management\n//        // altho to be fair, the api sucks because it won't accept multiple classes at once\n//        var hasClass, addClass, removeClass;\n\n//        if ('classList' in document.documentElement) {\n//            hasClass = function (elem, c) {\n//                return elem.classList.contains(c);\n//            };\n//            addClass = function (elem, c) {\n//                elem.classList.add(c);\n//            };\n//            removeClass = function (elem, c) {\n//                elem.classList.remove(c);\n//            };\n//        }\n//        else {\n//            hasClass = function (elem, c) {\n//                return classReg(c).test(elem.className);\n//            };\n//            addClass = function (elem, c) {\n//                if (!hasClass(elem, c)) {\n//                    elem.className = elem.className + ' ' + c;\n//                }\n//            };\n//            removeClass = function (elem, c) {\n//                elem.className = elem.className.replace(classReg(c), ' ');\n//            };\n//        }\n\n//        function toggleClass(elem, c) {\n//            var fn = hasClass(elem, c) ? removeClass : addClass;\n//            fn(elem, c);\n//        }\n\n//        var classie = {\n//            // full names\n//            hasClass: hasClass,\n//            addClass: addClass,\n//            removeClass: removeClass,\n//            toggleClass: toggleClass,\n//            // short names\n//            has: hasClass,\n//            add: addClass,\n//            remove: removeClass,\n//            toggle: toggleClass\n//        };\n\n//        // transport\n//        if (typeof define === 'function' && define.amd) {\n//            // AMD\n//            define(classie);\n//        } else {\n//            // browser global\n//            window.classie = classie;\n//        }\n\n//        [].slice.call(document.querySelectorAll('.team-grid__member')).forEach(function (el, i) {\n//            el.querySelector('.member__info').addEventListener('touchstart', function (e) {\n//                e.stopPropagation();\n//            }, false);\n//            el.addEventListener('touchstart', function (e) {\n//                classie.toggle(this, 'cs-hover');\n//            }, false);\n//        });\n\n//    }\n\n//})(window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./site.js\n");

/***/ }),

/***/ 0:
/*!*********************!*\
  !*** multi ./index ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./index */"./index.js");


/***/ })

/******/ });